{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\979ar\\\\OneDrive\\\\Desktop\\\\Devashish\\\\web D\\\\projects\\\\weather-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\nimport CurrentWeather from './Components/Search/CurrentWeather/CurrentWeather';\nimport Search from './Components/Search/Search';\nimport { WEATHER_API_KEY, WEATHER_API_URL } from './api';\nimport Forecast from './Components/Forcast/Forecast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forcastWeather, setForcastWeather] = useState(null);\n  console.log(currentWeather);\n  const handleOnSearchChange = searchData => {\n    const [lat, lon] = searchData.value.split(', ');\n    const currentWeatherFetch = fetch(`${WEATHER_API_URL}/weather?lat=${0}&lon=${0}&appid=${WEATHER_API_KEY}&units=metric`);\n    const forcastFetch = fetch(`${WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`);\n    Promise.all([currentWeatherFetch, forcastFetch]).then(async res => {\n      const weatherResponse = await res[0].json();\n      const forcastResponse = await res[1].json();\n      setCurrentWeather({\n        city: searchData.label,\n        ...weatherResponse\n      });\n      setForcastWeather({\n        city: searchData.label,\n        ...forcastResponse\n      });\n    }).catch(async err => {\n      console.error(err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      onSearchChange: handleOnSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrentWeather, {\n      data: currentWeather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tmOxbsUcx3Bgbh7QdtQxk9GTfoQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","CurrentWeather","Search","WEATHER_API_KEY","WEATHER_API_URL","Forecast","jsxDEV","_jsxDEV","App","_s","currentWeather","setCurrentWeather","forcastWeather","setForcastWeather","console","log","handleOnSearchChange","searchData","lat","lon","value","split","currentWeatherFetch","fetch","forcastFetch","Promise","all","then","res","weatherResponse","json","forcastResponse","city","label","catch","err","error","className","children","onSearchChange","fileName","_jsxFileName","lineNumber","columnNumber","data","_c","$RefreshReg$"],"sources":["C:/Users/979ar/OneDrive/Desktop/Devashish/web D/projects/weather-app/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport CurrentWeather from './Components/Search/CurrentWeather/CurrentWeather';\nimport Search from './Components/Search/Search';\nimport { WEATHER_API_KEY, WEATHER_API_URL } from './api';\nimport Forecast from './Components/Forcast/Forecast';\n\nfunction App() {\n\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forcastWeather, setForcastWeather] = useState(null);\n\n  console.log(currentWeather);\n\n  const handleOnSearchChange = (searchData) => {\n    const [lat, lon] = searchData.value.split(', ');\n    const currentWeatherFetch = fetch(`${WEATHER_API_URL}/weather?lat=${0}&lon=${0}&appid=${WEATHER_API_KEY}&units=metric`);\n    const forcastFetch = fetch(`${WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}&units=metric`);\n\n    Promise\n      .all([currentWeatherFetch, forcastFetch])\n      .then(async (res) => {\n        const weatherResponse = await res[0].json();\n        const forcastResponse = await res[1].json();\n\n        setCurrentWeather({ city: searchData.label, ...weatherResponse });\n        setForcastWeather({ city: searchData.label, ...forcastResponse });\n      })\n      .catch(async (err) => {\n        console.error(err);\n      })\n  }\n\n  return (\n    <div className=\"container\">\n      <Search onSearchChange={handleOnSearchChange} />\n      <CurrentWeather data={currentWeather} />\n      {/* {forcastWeather && <Forecast data={forcastWeather} />} */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB,OAAOC,cAAc,MAAM,mDAAmD;AAC9E,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,SAASC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACxD,OAAOC,QAAQ,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE1Dc,OAAO,CAACC,GAAG,CAACL,cAAc,CAAC;EAE3B,MAAMM,oBAAoB,GAAIC,UAAU,IAAK;IAC3C,MAAM,CAACC,GAAG,EAAEC,GAAG,CAAC,GAAGF,UAAU,CAACG,KAAK,CAACC,KAAK,CAAC,IAAI,CAAC;IAC/C,MAAMC,mBAAmB,GAAGC,KAAK,CAAE,GAAEnB,eAAgB,gBAAe,CAAE,QAAO,CAAE,UAASD,eAAgB,eAAc,CAAC;IACvH,MAAMqB,YAAY,GAAGD,KAAK,CAAE,GAAEnB,eAAgB,iBAAgBc,GAAI,QAAOC,GAAI,UAAShB,eAAgB,eAAc,CAAC;IAErHsB,OAAO,CACJC,GAAG,CAAC,CAACJ,mBAAmB,EAAEE,YAAY,CAAC,CAAC,CACxCG,IAAI,CAAC,MAAOC,GAAG,IAAK;MACnB,MAAMC,eAAe,GAAG,MAAMD,GAAG,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC;MAC3C,MAAMC,eAAe,GAAG,MAAMH,GAAG,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC;MAE3CnB,iBAAiB,CAAC;QAAEqB,IAAI,EAAEf,UAAU,CAACgB,KAAK;QAAE,GAAGJ;MAAgB,CAAC,CAAC;MACjEhB,iBAAiB,CAAC;QAAEmB,IAAI,EAAEf,UAAU,CAACgB,KAAK;QAAE,GAAGF;MAAgB,CAAC,CAAC;IACnE,CAAC,CAAC,CACDG,KAAK,CAAC,MAAOC,GAAG,IAAK;MACpBrB,OAAO,CAACsB,KAAK,CAACD,GAAG,CAAC;IACpB,CAAC,CAAC;EACN,CAAC;EAED,oBACE5B,OAAA;IAAK8B,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB/B,OAAA,CAACL,MAAM;MAACqC,cAAc,EAAEvB;IAAqB;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChDpC,OAAA,CAACN,cAAc;MAAC2C,IAAI,EAAElC;IAAe;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAErC,CAAC;AAEV;AAAClC,EAAA,CAjCQD,GAAG;AAAAqC,EAAA,GAAHrC,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}