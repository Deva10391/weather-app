{"ast":null,"code":"import React,{useState}from'react';import{AsyncPaginate}from'react-select-async-paginate';import{GEO_API_URL,geoApiOptions}from'../../api';import{jsx as _jsx}from\"react/jsx-runtime\";const Search=_ref=>{let{onSearchChange}=_ref;const[search,setSearch]=useState(null);const handleOnChange=searchData=>{setSearch(searchData);onSearchChange(searchData);};const loadOptions=async inputValue=>{try{const response=await fetch(\"\".concat(GEO_API_URL,\"/cities?minPopulation=1000000&namePrefix=\").concat(inputValue),geoApiOptions);const result=await response.json();const options=result.data.map(city=>({value:\"\".concat(city.latitude,\", \").concat(city.longitude),label:\"\".concat(city.name,\", \").concat(city.countryCode)}));return{options};}catch(err){console.error(err);}};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(AsyncPaginate,{placeholder:\"Search for the city\",debounceTimeout:600,value:search,onChange:handleOnChange,loadOptions:loadOptions})});};export default Search;","map":{"version":3,"names":["React","useState","AsyncPaginate","GEO_API_URL","geoApiOptions","jsx","_jsx","Search","_ref","onSearchChange","search","setSearch","handleOnChange","searchData","loadOptions","inputValue","response","fetch","concat","result","json","options","data","map","city","value","latitude","longitude","label","name","countryCode","err","console","error","children","placeholder","debounceTimeout","onChange"],"sources":["C:/Users/979ar/OneDrive/Desktop/Devashish/web D/projects/weather-app/src/Components/Search/Search.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { AsyncPaginate } from 'react-select-async-paginate';\r\nimport { GEO_API_URL, geoApiOptions } from '../../api';\r\n\r\nconst Search = ({ onSearchChange }) => {\r\n    const [search, setSearch] = useState(null);\r\n\r\n    const handleOnChange = (searchData) => {\r\n        setSearch(searchData);\r\n        onSearchChange(searchData);\r\n    }\r\n\r\n    const loadOptions = async (inputValue) => {\r\n        try {\r\n            const response = await fetch(`${GEO_API_URL}/cities?minPopulation=1000000&namePrefix=${inputValue}`, geoApiOptions);\r\n            const result = await response.json();\r\n            const options = result.data.map(city => ({\r\n                value: `${city.latitude}, ${city.longitude}`,\r\n                label: `${city.name}, ${city.countryCode}`,\r\n            }));\r\n\r\n            return { options };\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <AsyncPaginate\r\n                placeholder='Search for the city'\r\n                debounceTimeout={600}\r\n                value={search}\r\n                onChange={handleOnChange}\r\n                loadOptions={loadOptions}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,aAAa,KAAQ,6BAA6B,CAC3D,OAASC,WAAW,CAAEC,aAAa,KAAQ,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEvD,KAAM,CAAAC,MAAM,CAAGC,IAAA,EAAwB,IAAvB,CAAEC,cAAe,CAAC,CAAAD,IAAA,CAC9B,KAAM,CAACE,MAAM,CAAEC,SAAS,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAE1C,KAAM,CAAAW,cAAc,CAAIC,UAAU,EAAK,CACnCF,SAAS,CAACE,UAAU,CAAC,CACrBJ,cAAc,CAACI,UAAU,CAAC,CAC9B,CAAC,CAED,KAAM,CAAAC,WAAW,CAAG,KAAO,CAAAC,UAAU,EAAK,CACtC,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIf,WAAW,8CAAAe,MAAA,CAA4CH,UAAU,EAAIX,aAAa,CAAC,CACnH,KAAM,CAAAe,MAAM,CAAG,KAAM,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CACpC,KAAM,CAAAC,OAAO,CAAGF,MAAM,CAACG,IAAI,CAACC,GAAG,CAACC,IAAI,GAAK,CACrCC,KAAK,IAAAP,MAAA,CAAKM,IAAI,CAACE,QAAQ,OAAAR,MAAA,CAAKM,IAAI,CAACG,SAAS,CAAE,CAC5CC,KAAK,IAAAV,MAAA,CAAKM,IAAI,CAACK,IAAI,OAAAX,MAAA,CAAKM,IAAI,CAACM,WAAW,CAC5C,CAAC,CAAC,CAAC,CAEH,MAAO,CAAET,OAAQ,CAAC,CACtB,CAAE,MAAOU,GAAG,CAAE,CACVC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CACtB,CACJ,CAAC,CAED,mBACIzB,IAAA,QAAA4B,QAAA,cACI5B,IAAA,CAACJ,aAAa,EACViC,WAAW,CAAC,qBAAqB,CACjCC,eAAe,CAAE,GAAI,CACrBX,KAAK,CAAEf,MAAO,CACd2B,QAAQ,CAAEzB,cAAe,CACzBE,WAAW,CAAEA,WAAY,CAC5B,CAAC,CACD,CAAC,CAEd,CAAC,CAED,cAAe,CAAAP,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}